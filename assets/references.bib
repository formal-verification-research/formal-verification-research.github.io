@inproceedings{Taylor2022,
author = {Taylor, Landon and Zhang, Zhen},
booktitle = {Verification, Model Checking, and Abstract Interpretation},
editor = {Finkbeiner, Bernd and Wies, Thomas},
pages = {to appear},
publisher = {Springer International Publishing},
title = {Scaling Up Livelock Verification for Network-on-Chip Routing Algorithms},
year = {2022}
}
@inproceedings{Roberts2022,
author = {Roberts, Riley and Buecherl, Lukas and Myers, Chris J. and Zhang, Zhen},
booktitle = {Verification, Model Checking, and Abstract Interpretation},
editor = {Finkbeiner, Bernd and Wies, Thomas},
pages = {to appear},
publisher = {Springer International Publishing},
title = {{STAMINA} 2.0: Improving Scalability of Infinite-State Stochastic Model Checking},
year = {2022}
}
@inproceedings{Budde2021,
author={Budde, Carlos E. and Hartmanns, Arnd and Klauck, Michaela and K{\v{r}}et{\'i}nsk{\'y}, Jan and Parker, David and Quatmann, Tim and Turrini, Andrea and Zhang, Zhen},
editor={Margaria, Tiziana and Steffen, Bernhard},
title={On Correctness, Precision, and Performance in Quantitative Verification},
booktitle={Leveraging Applications of Formal Methods, Verification and Validation: Tools and Trends},
year={2021},
publisher={Springer International Publishing},
pages={216--241},
isbn={978-3-030-83723-5}
}
@inproceedings{Noel2020,
author = {Daniel, Noel and Shabanian, Tahmoures and Basu, Prabal and Chakraborty, Koushik and Roy, Sanghamitra and Zhang, Zhen},
booktitle = {Asia and South Pacific Design Automation Conference},
title = {{EFFORT: Enhancing Energy Efficiency and Error Resilience of a Near-Threshold Tensor Processing Unit}},
year = {2020}
}
@inproceedings{Bucherl2020,
author = {B{\"{u}}cherl, Lukas and Mante, Jeanet and Fontanarrosa, Pedro and Zhang, Zhen and Jepsen, Brett and Roberts, Riley and Myers, Chris J},
booktitle = {International Workshop on Bio-Design Automation},
pages = {39--40},
title = {{Genetic Circuit Hazard Analysis Using STAMINA}},
year = {2020}
}
@inproceedings{Smith2019,
author = {Smith, Joshua and Huang, Xiaowei and Swaminathan, Viswanathan and Zhang, Zhen},
booktitle = {2nd Workshop on Formal Methods for ML-Enabled Autonomous Systems},
title = {{Improving Deep Neural Network Verification Using Specification-Guided Search}},
year = {2019}
}
@inproceedings{Neupane2019a,
abstract = {Stochastic model checking is a technique for analyzing systems that possess probabilistic characteristics. However, its scalability is limited as probabilistic models of real-world applications typically have very large or infinite state space. This paper presents a new infinite state CTMC model checker, STAMINA, with improved scalability. It uses a novel state space approximation method to reduce large and possibly infinite state CTMC models to finite state representations that are amenable to existing stochastic model checkers. It is integrated with a new property-guided state expansion approach that improves the analysis accuracy. Demonstration of the tool on several benchmark examples shows promising results in terms of analysis efficiency and accuracy compared with a state-of-the-art CTMC model checker that deploys a similar approximation method.},
address = {Cham},
author = {Neupane, Thakur and Myers, Chris J and Madsen, Curtis and Zheng, Hao and Zhang, Zhen},
booktitle = {Computer Aided Verification},
editor = {Dillig, Isil and Tasiran, Serdar},
isbn = {978-3-030-25540-4},
pages = {540--549},
publisher = {Springer International Publishing},
title = {{{\{}STAMINA{\}}: STochastic Approximate Model-Checker for INfinite-State Analysis}},
year = {2019}
}
@article{Madsen2019,
author = {Madsen, Curtis and {Go{\~{n}}i Moreno}, Angel and P, Umesh and Palchick, Zachary and Roehner, Nicholas and Atallah, Christian and Bartley, Bryan and Choi, Kiri and {Cox Robert}, Sidney and Gorochowski, Thomas and Gr{\"{u}}nberg, Raik and Macklin, Chris and McLaughlin, James and Meng, Xianwei and Nguyen, Tramy and Pocock, Matthew and Samineni, Meher and Scott-Brown, James and Tarter, Ysis and Zhang, Michael and Zhang, Zhen and Zundel, Zach and Beal, Jacob and Bissell, Michael and Clancy, Kevin and Gennari, John H and Misirli, Goksel and Myers, Chris and Oberortner, Ernst and Sauro, Herbert and Wipat, Anil},
doi = {10.1515/jib-2019-0025},
isbn = {16134516},
journal = {Journal of Integrative Bioinformatics},
title = {{Synthetic Biology Open Language ({\{}SBOL{\}}) Version 2.3}},
url = {https://www.degruyter.com/view/j/jib.2019.16.issue-2/jib-2019-0025/jib-2019-0025.xml},
volume = {16},
year = {2019}
}
@article{Watanabe2019,
annote = {PMID: 29944839},
author = {Watanabe, Leandro and Nguyen, Tramy and Zhang, Michael and Zundel, Zach and Zhang, Zhen and Madsen, Curtis and Roehner, Nicholas and Myers, Chris},
doi = {10.1021/acssynbio.8b00078},
journal = {ACS Synthetic Biology},
number = {7},
pages = {1560--1563},
title = {{{\{}iBioSim{\}} 3: A Tool for Model-Based Genetic Circuit Design}},
url = {https://doi.org/10.1021/acssynbio.8b00078},
volume = {8},
year = {2019}
}
@inproceedings{Lewis2019,
abstract = {The design of modern network-on-chip (NoC) systems faces reliability challenges due to process and environmental variations. Peak power supply noise (PSN) in the power delivery network of a NoC device plays a critical role in determining reliable operations: PSN typically leads to voltage droop, which can cause timing errors in the NoC router pipelines. Existing simulation-based approaches cannot provide rigorous, worst-case reliability guarantees on the probabilistic behaviors of PSN. To address this problem, this paper takes a significant step in formally analyzing PSN in modern NoCs. Specifically, we present a probabilistic model checking approach for the rigorous characterization of PSN for a generic central router of a large mesh-NoC system, under the Round Robin scheduling mechanism with a uniform random network traffic load. Defining features for PSN are extracted at the behavioral level to facilitate property formulation. Several abstract models have been derived for the central router's concrete model based on the observations of its arbiter's conflict resolution behavior. Probabilistic modeling and verification are performed using the Modest Toolset. Results show significant scalability of our abstract models, and reveal key PSN characteristics that are indicative of NoC design and optimization.},
address = {Cham},
author = {Lewis, Benjamin and Hartmanns, Arnd and Basu, Prabal and {Jayashankara Shridevi}, Rajesh and Chakraborty, Koushik and Roy, Sanghamitra and Zhang, Zhen},
booktitle = {Formal Methods for Industrial Critical Systems},
editor = {Larsen, Kim Guldstrand and Willemse, Tim},
isbn = {978-3-030-27008-7},
pages = {110--126},
publisher = {Springer International Publishing},
title = {{Probabilistic Verification for Reliable Network-on-Chip System Design}},
year = {2019}
}
@book{DBLP:series/cb/30,
doi = {10.1007/978-3-030-17297-8},
editor = {Li{\`{o}}, Pietro and Zuliani, Paolo},
isbn = {978-3-030-17296-1},
publisher = {Springer},
series = {Computational Biology},
title = {{Automated Reasoning for Systems Biology and Medicine}},
url = {https://doi.org/10.1007/978-3-030-17297-8},
volume = {30},
year = {2019}
}
@incollection{Neupane2019,
abstract = {There has been an increasing demand for formal methods in the design process of safety-critical synthetic genetic circuitsGenetic circuit. Probabilistic modelProbabilistic model checking checkingModel checking techniques have demonstrated significant potential in analyzing the intrinsic probabilistic behaviors of complex genetic circuitGenetic circuit designs. However, its inability to scale limits its applicability in practice. This chapter addresses the scalability problem by presenting a state-space approximation method to remove unlikely states resulting in a reduced, finite state representation of the infinite-state continuous-time Markov chainMarkov chain that is amenable to probabilistic modelProbabilistic model checking checkingModel checking. The proposed method is evaluated on a design of a genetic toggle switchToggle switch. Comparisons with another state-of-the-art tool demonstrate both accuracy and efficiency of the presented method.},
address = {Cham},
author = {Neupane, Thakur and Zhang, Zhen and Madsen, Curtis and Zheng, Hao and Myers, Chris J},
booktitle = {Automated Reasoning for Systems Biology and Medicine},
chapter = {12},
doi = {10.1007/978-3-030-17297-8_12},
editor = {Li{\`{o}}, Pietro and Zuliani, Paolo},
isbn = {978-3-030-17297-8},
pages = {327--348},
publisher = {Springer International Publishing},
title = {{Approximation Techniques for Stochastic Analysis of Biological Systems}},
url = {https://doi.org/10.1007/978-3-030-17297-8{\_}12},
volume = {30},
year = {2019}
}
@article{Cox2018,
annote = {1},
author = {Sidney, Cox Robert and Curtis, Madsen and Alastair, McLaughlin James and Tramy, Nguyen and Nicholas, Roehner and Bryan, Bartley and Jacob, Beal and Michael, Bissell and Kiri, Choi and Kevin, Clancy and Raik, Gr{\"{u}}nberg and Chris, Macklin and Goksel, Misirli and Ernst, Oberortner and Matthew, Pocock and Meher, Samineni and Michael, Zhang and Zhen, Zhang and Zach, Zundel and H., Gennari John and Chris, Myers and Herbert, Sauro and Anil, Wipat},
doi = {10.1515/jib-2018-0001},
journal = {Journal of Integrative Bioinformatics},
title = {{Synthetic Biology Open Language (SBOL) Version 2.2.0}},
url = {https://doi.org/10.1515/jib-2018-0001},
volume = {15},
year = {2018}
}
@article{Zundel2017,
abstract = { This paper presents a new validation and conversion utility for the Synthetic Biology Open Language (SBOL). This utility can be accessed directly in software using the libSBOLj library, through a web interface, or using a web service via RESTful API calls. The validator checks all required and best practice rules set forth in the SBOL specification document, and it reports back to the user the location within the document of any errors found. The converter is capable of translating from/to SBOL 1, GenBank, and FASTA formats to/from SBOL 2. The SBOL Validator/Converter utility is released freely and open source under the Apache 2.0 license. The online version of the validator/converter utility can be found here: http://www.async.ece.utah.edu/sbol-validator/. The source code for the validator/converter can be found here: http://github.com/SynBioDex/SBOL-Validator/. },
annote = {PMID: 28033703},
author = {Zundel, Zach and Samineni, Meher and Zhang, Zhen and Myers, Chris J},
doi = {10.1021/acssynbio.6b00277},
journal = {ACS Synthetic Biology},
number = {7},
pages = {1161--1168},
title = {{A Validator and Converter for the Synthetic Biology Open Language}},
url = {https://doi.org/10.1021/acssynbio.6b00277},
volume = {6},
year = {2017}
}
@article{Roehner2015a,
abstract = { The Synthetic Biology Open Language (SBOL) is a standard that enables collaborative engineering of biological systems across different institutions and tools. SBOL is developed through careful consideration of recent synthetic biology trends, real use cases, and consensus among leading researchers in the field and members of commercial biotechnology enterprises. We demonstrate and discuss how a set of SBOL-enabled software tools can form an integrated, cross-organizational workflow to recapitulate the design of one of the largest published genetic circuits to date, a 4-input AND sensor. This design encompasses the structural components of the system, such as its DNA, RNA, small molecules, and proteins, as well as the interactions between these components that determine the system's behavior/function. The demonstrated workflow and resulting circuit design illustrate the utility of SBOL 2.0 in automating the exchange of structural and functional specifications for genetic parts, devices, and the biological systems in which they operate. },
annote = {PMID: 27111421},
author = {Roehner, Nicholas and Beal, Jacob and Clancy, Kevin and Bartley, Bryan and Misirli, Goksel and Gr{\"{u}}nberg, Raik and Oberortner, Ernst and Pocock, Matthew and Bissell, Michael and Madsen, Curtis and Nguyen, Tramy and Zhang, Michael and Zhang, Zhen and Zundel, Zach and Densmore, Douglas and Gennari, John H and Wipat, Anil and Sauro, Herbert M and Myers, Chris J},
doi = {10.1021/acssynbio.5b00215},
journal = {ACS Synthetic Biology},
number = {6},
pages = {498--506},
title = {{Sharing Structure and Function in Biological Design with SBOL 2.0}},
url = {https://doi.org/10.1021/acssynbio.5b00215},
volume = {5},
year = {2016}
}
@article{Zhang2016,
abstract = {A fault-tolerant routing algorithm in Network-on-Chip (NoC) architectures provides adaptivity for on-chip communications. Adding fault-tolerance adaptivity to a routing algorithm increases its design complexity and makes it prone to deadlock and other problems if improperly implemented. Formal verification techniques are needed to check the correctness of the design. This paper describes the discovery of a potential livelock problem through formal analysis on an extension of the link-fault tolerant NoC architecture introduced by Wu et al. In the process of eliminating this problem, an improved routing architecture is derived. The improvement simplifies the routing architecture, enabling successful verification using the CADP verification toolbox. The routing algorithm is proven to have several desirable properties including deadlock and livelock freedom, and tolerance to a single-link-fault.},
annote = {Formal Methods for Industrial Critical Systems (FMICS'2014)},
author = {Zhang, Zhen and Serwe, Wendelin and Wu, Jian and Yoneda, Tomohiro and Zheng, Hao and Myers, Chris},
doi = {https://doi.org/10.1016/j.scico.2016.01.002},
issn = {0167-6423},
journal = {Science of Computer Programming},
keywords = {Fault-tolerant routing,Formal methods,Model checking,Network-on-chip,Process calculus},
pages = {24--39},
title = {{An improved fault-tolerant routing algorithm for a Network-on-Chip derived with formal analysis}},
url = {http://www.sciencedirect.com/science/article/pii/S0167642316000125},
volume = {118},
year = {2016}
}
@article{Roehner2015,
abstract = { In the context of synthetic biology, model generation is the automated process of constructing biochemical models based on genetic designs. This paper discusses the use cases for model generation in genetic design automation (GDA) software tools and introduces the foundational concepts of standards and model annotation that make this process useful. Finally, this paper presents an implementation of model generation in the GDA software tool iBioSim and provides an example of generating a Systems Biology Markup Language (SBML) model from a design of a 4-input AND sensor written in the Synthetic Biology Open Language (SBOL). },
annote = {PMID: 25822671},
author = {Roehner, Nicholas and Zhang, Zhen and Nguyen, Tramy and Myers, Chris J},
doi = {10.1021/sb5003289},
journal = {ACS Synthetic Biology},
number = {8},
pages = {873--879},
title = {{Generating Systems Biology Markup Language Models from the Synthetic Biology Open Language}},
url = {https://doi.org/10.1021/sb5003289},
volume = {4},
year = {2015}
}
@article{Bartley2015,
annote = {2},
author = {Bryan, Bartley and Jacob, Beal and Kevin, Clancy and Goksel, Misirli and Nicholas, Roehner and Ernst, Oberortner and Matthew, Pocock and Michael, Bissell and Curtis, Madsen and Tramy, Nguyen and Zhen, Zhang and H., Gennari John and Chris, Myers and Anil, Wipat and Herbert, Sauro},
doi = {10.1515/jib-2015-272},
journal = {Journal of Integrative Bioinformatics},
pages = {902},
title = {{Synthetic Biology Open Language (SBOL) Version 2.0.0}},
url = {https://doi.org/10.1515/jib-2015-272},
volume = {12},
year = {2015}
}
@article{Zheng2015,
abstract = {This paper presents a compositional framework to address the state explosion problem in model checking of concurrent systems. This framework takes as input a system model described as a network of communicating components in a high-level description language, finds the local state transition models for each individual component where local properties can be verified, and then iteratively reduces and composes the component state transition models to form a reduced global model for the entire system where global safety properties can be verified. The state space reductions used in this framework result in a reduced model that contains the exact same set of observably equivalent executions as in the original model, therefore, no false counter-examples result from the verification of the reduced model. This approach allows designs that cannot be handled monolithically or with partial-order reduction to be verified without difficulty. The experimental results show significant scale-up of this compositional verification framework on a number of non-trivial concurrent system models.},
author = {Zheng, H and Zhang, Z and Myers, C J and Rodriguez, E and Zhang, Y},
doi = {10.1109/TC.2014.2329701},
issn = {0018-9340},
journal = {IEEE Transactions on Computers},
keywords = {compositional reasoning,concurrency,concurrency (computers);formal verification;compos,minimization,model checking},
month = {jun},
number = {6},
pages = {1607--1621},
title = {{Compositional Model Checking of Concurrent Systems}},
volume = {64},
year = {2015}
}
@inbook{Madsen2015,
abstract = {This chapter describes new analysis and verification techniques for synthetic genetic circuits. In particular, it applies stochastic model checking techniques to models of genetic circuits in order to ensure that they behave correctly and are as robust as possible for a variety of different inputs and parameter settings. In addition to stochastic model checking, this chapter proposes new variants to the incremental stochastic simulation algorithm (iSSA) that are capable of presenting a researcher with a simulation trace of the typical behavior of the system. Before the development of this algorithm, discerning this information was extremely error-prone as it involved performing many simulations and attempting to wade through the massive amounts of data. This algorithm greatly aids researchers in designing genetic circuits as it efficiently shows the researcher the most likely behavior of the circuit. Both the iSSA and stochastic model checking can be used in concert to give a researcher the likelihood that the system exhibits its most typical behavior, as well as, non-typical behaviors. This methodology is applied to several genetic circuits leading to new understanding of the effects of various parameters on the behavior of these circuits.},
address = {New York, NY},
author = {Madsen, Curtis and Myers, Chris and Roehner, Nicholas and Winstead, Chris and Zhang, Zhen},
booktitle = {Computational Methods in Synthetic Biology},
doi = {10.1007/978-1-4939-1878-2_11},
editor = {Marchisio, Mario Andrea},
isbn = {978-1-4939-1878-2},
pages = {217--257},
publisher = {Springer New York},
title = {{Efficient Analysis Methods in Synthetic Biology}},
url = {https://doi.org/10.1007/978-1-4939-1878-2{\_}11},
year = {2015}
}
@article{Zhang2015,
abstract = {The Synthetic Biology Open Language (SBOL) is an emerging data standard for representing synthetic biology designs. The goal of SBOL is to improve the reproducibility of these designs and their electronic exchange between researchers and/or genetic design automation tools. The latest version of the standard, SBOL 2.0, enables the annotation of a large variety of biological components (e.g., DNA, RNA, proteins, complexes, small molecules, etc.) and their interactions. SBOL 2.0 also allows researchers to organize components into hierarchical modules, to specify their intended functions, and to link modules to models that describe their behavior mathematically. To support the use of SBOL 2.0, we have developed thelibSBOLj 2.0Java library, which provides an easy to use Application Programming Interface (API) for developers, including manipulation of SBOL constructs, serialization to and from an RDF/XML file format, and migration support in the form of conversion from the prior SBOL 1.1 standard to SBOL 2.0. This letter describes thelibSBOLj 2.0library and key engineering decisions involved in its design.},
author = {Zhang, Z and Nguyen, T and Roehner, N and Misirli, G and Pocock, M and Oberortner, E and Samineni, M and Zundel, Z and Beal, J and Clancy, K and Wipat, A and Myers, C J},
doi = {10.1109/LLS.2016.2546546},
issn = {2332-7685},
journal = {IEEE Life Sciences Letters},
keywords = {Software tools;Synthetic biology;Software librarie},
month = {dec},
number = {4},
pages = {34--37},
title = {{{\{}libSBOLj{\}} 2.0: A Java Library to Support SBOL 2.0}},
volume = {1},
year = {2015}
}
@inproceedings{Zhang2014,
abstract = {A fault-tolerant routing algorithm in Network-on-Chip architectures provides adaptivity for on-chip communications. Adding fault-tolerance adaptivity to a routing algorithm increases its design complexity and makes it prone to deadlock and other problems if improperly implemented. Formal verification techniques are needed to check the correctness of the design. This paper performs formal analysis on an extension of the link-fault tolerant Network-on-Chip architecture introduced by Wu et al that supports multiflit wormhole routing. This paper describes several lessons learned during the process of constructing a formal model of this routing architecture. Finally, this paper presents how the deadlock freedom and tolerance to a single-link fault is verified for a two-by-two mesh version of this routing architecture.},
address = {Cham},
author = {Zhang, Zhen and Serwe, Wendelin and Wu, Jian and Yoneda, Tomohiro and Zheng, Hao and Myers, Chris},
booktitle = {Formal Methods for Industrial Critical Systems},
editor = {Lang, Fr{\'{e}}d{\'{e}}ric and Flammini, Francesco},
isbn = {978-3-319-10702-8},
pages = {48--62},
publisher = {Springer International Publishing},
title = {{Formal Analysis of a Fault-Tolerant Routing Algorithm for a Network-on-Chip}},
year = {2014}
}
@article{Madsen2014,
address = {New York, NY, USA},
author = {Madsen, Curtis and Zhang, Zhen and Roehner, Nicholas and Winstead, Chris and Myers, Chris},
doi = {10.1145/2644817},
issn = {1550-4832},
journal = {J. Emerg. Technol. Comput. Syst.},
keywords = {Markov chain analysis,Stochastic model checking,continuous stochastic logic,design space exploration,synthetic genetic circuits},
month = {dec},
number = {3},
pages = {23:1----23:21},
publisher = {ACM},
title = {{Stochastic Model Checking of Genetic Circuits}},
url = {http://doi.acm.org/10.1145/2644817},
volume = {11},
year = {2014}
}
@inproceedings{Madsen2012,
abstract = {When designing and analyzing genetic circuits, researchers are often interested in the probability of the system reaching a given state within a certain amount of time. Usually, this involves simulating the system to produce some time series data and analyzing this data to discern the state probabilities. However, as the complexity of models of genetic circuits grow, it becomes more difficult for researchers to reason about the different states by looking only at time series simulation results of the models. To address this problem, this paper employs the use of stochastic model checking, a method for determining the likelihood that certain events occur in a system, with continuous stochastic logic (CSL) properties to obtain similar results. This goal is accomplished by the introduction of a methodology for converting a genetic circuit model (GCM) into a continuous-time Markov chain (CTMC). This CTMC is analyzed using transient Markov chain analysis to determine the likelihood that the circuit satisfies a given CSL property in a finite amount of time. This paper illustrates a use of this methodology to determine the likelihood of failure in a genetic toggle switch and compares these results to stochastic simulation-based analysis of this same circuit. Our results show that this method results in a substantial speedup as compared with conventional simulation-based approaches.},
author = {Madsen, C and Myers, C J and Roehner, N and Winstead, C and Zhang, Z},
booktitle = {2012 IEEE Symposium on Computational Intelligence in Bioinformatics and Computational Biology (CIBCB)},
doi = {10.1109/CIBCB.2012.6217255},
keywords = {complex networks;equivalent circuits;genetics;Mark},
month = {may},
pages = {379--386},
title = {{Utilizing stochastic model checking to analyze genetic circuits}},
year = {2012}
}
@misc{Wu2011,
abstract = {Adaptive routing is a sensible approach to enhance fault-tolerance in Network-on-Chip (NoC) architectures, but can cause deadlock if implemented improperly. Glass and Ni proposed an adaptive routing algorithm based on a turn model which is proven to tolerate at least one fault in each routing process and is free of deadlock. However, when faults happen on links of a network instead of on nodes, these two claims are no longer true. This paper proposes an improved routing algorithm based on the Glass/Ni protocol which tolerates a single link fault while still avoiding deadlock in a mesh network. Simulation results indicate that this improved algorithm provides significant improvements in network reliability with minimal cost.},
author = {Wu, Jian and Zhang, Zhen and Myers, Chris},
howpublished = {Virtual Worldwide Forum for PhD researchers in Electronic Design Automation},
month = {nov},
title = {{A Fault-Tolerant Routing Algorithm for a Network-on-Chip Using a Link Fault Model}},
year = {2011}
}
@inproceedings{Zhang2008,
abstract = {Synchronizers are necessary when importing signals into any clocked domain. As multiple different clocks become increasingly common on chips, synchronizers also proliferate. To achieve high performance it is important that the system designer is aware of the timing characteristics of different synchronizers -which are non-deterministic by nature -- and can choose a design to meet their system requirements. This paper Presents a method for analyzing and depicting behavior of synchronizers and applies this to two recognized designs. A detailed analysis of timing boundaries of the two synchronizers is Presented. The probabilistic behavior of data cycle is then investigated. Analytical expressions for the average data cycle are also derived.},
author = {Zhang, Z and Garside, J},
booktitle = {20th UK Asynchronous Forum},
title = {{Performance Analysis of Two Synchronizers}},
year = {2008}
}
